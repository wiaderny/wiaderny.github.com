<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Jonah Wiaderny</title>
		<description>Random Logs</description>
		<link>http://www.wiaderny.org</link>
		<atom:link href="http://www.wiaderny.org/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Install GnuPG on Mountain Lion</title>
				<description>&lt;p&gt;With the introduction of OS X 10.8 a very handy possibility of using PGP vanished &amp;#8211; although the guys from &lt;a href='https://www.gpgtools.org/'&gt;PGP-Tools&lt;/a&gt; are working on an update to make their tool work with the native mail app. However great luck for us there is still the old school possibility of installing &lt;a href='http://www.gnupg.org/'&gt;Gnu Privacy Guard&lt;/a&gt; on your local machine. This log will be a (hopefully) handy note on how to install this great pice.&lt;/p&gt;

&lt;p&gt;After you have opened your Terminal, you start-off by downloading the desired version (and its corresponding signature) from gnupg.org.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='nv'&gt;$ &lt;/span&gt;curl -O ftp://ftp.gnupg.org/gcrypt/gnupg/gnupg-1.4.tar.gz 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To ensure the originality of your obtained file you should concider to run following command&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='nv'&gt;$ &lt;/span&gt;openssl sha1 gnupg-1.4.12.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;what should yield you a value of &lt;code&gt;790587e440ec7d429b120db7a96a237badc638fd&lt;/code&gt;. If it does not, stop here and contact the guys at gnupg. I assume however, that you got a valid distribution. You may untar, change directory and configure your&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='nv'&gt;$ &lt;/span&gt;tar -xzf gnupg-1.4.12.tar.gz
&lt;span class='nv'&gt;$ &lt;/span&gt;&lt;span class='nb'&gt;cd &lt;/span&gt;gnupg-1.4.12 
&lt;span class='nv'&gt;$ &lt;/span&gt;./configure
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I assume that you do not yield any error when running the tests, so that we are good to go and install with the well known method, namely &lt;code&gt;make&lt;/code&gt;, &lt;code&gt;make check&lt;/code&gt; and finalize this procedure with &lt;code&gt;sudo make install&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now that everything is set up, it&amp;#8217;s time to generate some random numbers and afterwards our keys.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;gpg &lt;span class='o'&gt;(&lt;/span&gt;GnuPG&lt;span class='o'&gt;)&lt;/span&gt; 1.4; Copyright &lt;span class='o'&gt;(&lt;/span&gt;C&lt;span class='o'&gt;)&lt;/span&gt; 2012 Free Software Foundation, Inc. 
This is free software: you are free to change and redistribute it. 
There is NO WARRANTY, to the extent permitted by law. 
Bitte wählen Sie, welche Art von Schlüssel Sie möchten: 
&lt;span class='o'&gt;(&lt;/span&gt;1&lt;span class='o'&gt;)&lt;/span&gt; RSA und RSA &lt;span class='o'&gt;(&lt;/span&gt;voreingestellt&lt;span class='o'&gt;)&lt;/span&gt; 
&lt;span class='o'&gt;(&lt;/span&gt;2&lt;span class='o'&gt;)&lt;/span&gt; DSA und Elgamal 
&lt;span class='o'&gt;(&lt;/span&gt;3&lt;span class='o'&gt;)&lt;/span&gt; DSA &lt;span class='o'&gt;(&lt;/span&gt;nur unterschreiben/beglaubigen&lt;span class='o'&gt;)&lt;/span&gt; 
&lt;span class='o'&gt;(&lt;/span&gt;4&lt;span class='o'&gt;)&lt;/span&gt; RSA &lt;span class='o'&gt;(&lt;/span&gt;nur signieren/beglaubigen&lt;span class='o'&gt;)&lt;/span&gt; 
Ihre Auswahl?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;According to your system language the output will vary. Nevertheless you are free to choose whatever suits your needs most, I have chosen (1). Next steps are pretty straight forward and self explanatory. After the process will be finished you will end up with a generated public and private key. Some important functions for you may be the &lt;code&gt;--list keys&lt;/code&gt; option, which yields all available keys in your &lt;code&gt;pubring.pgp&lt;/code&gt; file, or the command&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='nv'&gt;$ &lt;/span&gt;gpg --armor --export you@youremail.tld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will yield your public key block which you can save and send to your addressees so they will be able to encrypt their messages for you. To import a public key, just use the &lt;code&gt;--import&lt;/code&gt; command which should be followed by the key file you want to use. Encrypting a file can be achieved by the first command, decrypting by the second.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='nv'&gt;$ &lt;/span&gt;gpg --output outfile --encrypt --recipient name@domain.tld inputfile 
&lt;span class='nv'&gt;$ &lt;/span&gt;gpg --output inputfile --decrypt outfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
				<pubDate>Mon, 13 May 2013 15:10:55 +0200</pubDate>
				<link>http://www.wiaderny.org/notes/install-gnupg-on-mountain-lion/</link>
				<guid isPermaLink="true">http://www.wiaderny.org/notes/install-gnupg-on-mountain-lion/</guid>
			</item>
		
			<item>
				<title>Don't forget your bloscom config</title>
				<description>&lt;p&gt;To install &lt;a href='http://www.blosxom.com/'&gt;Blosxom&lt;/a&gt; on Debian you start in SSH by updating your package-list and requesting the Blosxom package.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='nv'&gt;$ &lt;/span&gt;sudo apt-get update sudo 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configuring is pretty straight forward and you will probably end up with the configuration file in your local &lt;code&gt;cgi-bin&lt;/code&gt; folder. Now if you visit your website and it comes to your attention that just the default header and footer is shown, make sure to visit directory &lt;code&gt;/etc/blosxom/&lt;/code&gt; and inspect the &lt;code&gt;blosxom.conf&lt;/code&gt; file so that it points to the right &lt;code&gt;$data_dir&lt;/code&gt;.&lt;/p&gt;</description>
				<pubDate>Fri, 11 Jan 2013 00:16:44 +0100</pubDate>
				<link>http://www.wiaderny.org/notes/do-not-forget-your-blosxom-conf/</link>
				<guid isPermaLink="true">http://www.wiaderny.org/notes/do-not-forget-your-blosxom-conf/</guid>
			</item>
		
			<item>
				<title>Collaborative Editing with Markdown</title>
				<description>&lt;p&gt;Just recently I had to make up my mind about how to collaborate on simple memo files which would be synchronized using &lt;a href='http://db.tt/tfvLVYN'&gt;dropbox&lt;/a&gt; across heterogeneous systems. Proprietary file formats would of course drop out. Besides, no one wanted to install an additional program.&lt;sup id='fnref:1'&gt;&lt;a href='#fn:1' rel='footnote'&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;A very intuitive possibility was to use the great and straightforward &lt;a href='http://daringfireball.net/projects/markdown/syntax'&gt;mardown syntax&lt;/a&gt;.&lt;sup id='fnref:2'&gt;&lt;a href='#fn:2' rel='footnote'&gt;2&lt;/a&gt;&lt;/sup&gt; By mardown&amp;#8217;s design you are able to compile an input document to an output document with markdown. However, we had three individual memo files, so everyone of us could write into his own &lt;code&gt;.md&lt;/code&gt; file and two style files which we wanted to be compiled into one single &lt;code&gt;.html&lt;/code&gt; file. For compiling multiple input files into one output file &lt;a href='http://johnmacfarlane.net/pandoc/'&gt;pandoc&lt;/a&gt; comes in really handy.&lt;/p&gt;

&lt;p&gt;If you are on a Unix/Mac machine you can compile multiple input files to one file by running following commands in a terminal window&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='nv'&gt;$ &lt;/span&gt;&lt;span class='nb'&gt;cd&lt;/span&gt; &amp;lt;YOURDIRECTORY&amp;gt;
&lt;span class='c'&gt;# =&amp;gt; Change directory to where your files are located&lt;/span&gt;
&lt;span class='nv'&gt;$ &lt;/span&gt;pandoc *.md &amp;gt; memos.html
&lt;span class='c'&gt;# =&amp;gt; Take all .md files in &amp;lt;YOURDIRECTORY&amp;gt; and compile a single html file&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using Windows you might get an input error using the above mentioned command. Therefore it seems better to run following commands in your &lt;code&gt;cmd.exe&lt;/code&gt;.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='nv'&gt;$ &lt;/span&gt;&lt;span class='nb'&gt;cd&lt;/span&gt; &amp;lt;YOURDIRECTORY&amp;gt;
&lt;span class='c'&gt;# =&amp;gt; Change directory to where your files are located&lt;/span&gt;
&lt;span class='nv'&gt;$ &lt;/span&gt;pandoc -o memos.html input_1.md input_2.md input_n.md 
&lt;span class='c'&gt;# =&amp;gt; Compile a single .html using all specified input files&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using pandoc and dropbox for collaborative editing of simple memos across heterogeneous systems seems to work just fine. However pandoc as a processor is much more powerful and I can only recommend you take a look for yourself.&lt;/p&gt;
&lt;div class='footnotes'&gt;&lt;hr /&gt;&lt;ol&gt;&lt;li id='fn:1'&gt;
&lt;p&gt;Although there are many great programs for that kind of work, like &lt;a href='http://www.codingmonkeys.de/subethaedit/'&gt;SubEthaEdit&lt;/a&gt;, inter alia.&lt;/p&gt;
&lt;a href='#fnref:1' rev='footnote'&gt;&amp;#8617;&lt;/a&gt;&lt;/li&gt;&lt;li id='fn:2'&gt;
&lt;p&gt;I actually use Markdown to produce every note I write on this very website. It is extremely useful and I cannot stress how much I recommend it for plain writing.&lt;/p&gt;
&lt;a href='#fnref:2' rev='footnote'&gt;&amp;#8617;&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</description>
				<pubDate>Fri, 11 Jan 2013 00:16:44 +0100</pubDate>
				<link>http://www.wiaderny.org/notes/collaborative-editing-with-markdown/</link>
				<guid isPermaLink="true">http://www.wiaderny.org/notes/collaborative-editing-with-markdown/</guid>
			</item>
		
			<item>
				<title>Textile as a custom processor in Marked</title>
				<description>&lt;p&gt;Just recently a few fellow students were curious how to use &lt;a href='[http://en.wikipedia.org/wiki/Textile_(markup_language)]'&gt;textile&lt;/a&gt; as the markup language in &lt;a href='[http://markedapp.com]'&gt;Marked&lt;/a&gt;, which is a great app by the way. in the first place you have to have textile, of course. The rest is quite trivial but you need to have Apple Developer Tools to be installed on your local machine.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Download and install perl textile from &lt;a href='[https://github.com/bradchoate/text-textile]'&gt;github&lt;/a&gt;.&lt;/li&gt;

&lt;li&gt;Run &lt;code&gt;which textile&lt;/code&gt; in a terminal to determine your textile path.&lt;/li&gt;

&lt;li&gt;Set textile as your custom processor in Marked preferences as shown in the following image.&lt;sup id='fnref:1'&gt;&lt;a href='#fn:1' rel='footnote'&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt='Marked app textile as custom processor ' src='../../assets/images/Bildschirmfoto-2013-01-11-um-21.29.46.png' /&gt;&lt;div class='footnotes'&gt;&lt;hr /&gt;&lt;ol&gt;&lt;li id='fn:1'&gt;
&lt;p&gt;It&amp;#8217;s a good idea to actually tick the checkbox if you want to use textile. I had it off in this screenshot as I mostly stick with the markdown syntax.&lt;/p&gt;
&lt;a href='#fnref:1' rev='footnote'&gt;&amp;#8617;&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</description>
				<pubDate>Fri, 11 Jan 2013 00:00:00 +0100</pubDate>
				<link>http://www.wiaderny.org/notes/textile-as-custom-processor-in-marked/</link>
				<guid isPermaLink="true">http://www.wiaderny.org/notes/textile-as-custom-processor-in-marked/</guid>
			</item>
		
			<item>
				<title>HTML Entities or Decimals</title>
				<description>&lt;p&gt;I had issues with the RSS feed for this site. The feed validator was telling me that using a HTML entity like &lt;code&gt;&amp;amp;lsquo;&lt;/code&gt; was invalid. I don&amp;#8217;t know much about XML, but it seemed strange; I &lt;em&gt;had&lt;/em&gt; escaped the character; I &lt;em&gt;hadn&amp;#8217;t&lt;/em&gt; just pasted in a &amp;#8216;curly&amp;#8217; quotation mark.&lt;/p&gt;

&lt;p&gt;Turns out XML doesn&amp;#8217;t like some HTML entities. Using &lt;code&gt;&amp;amp;infin;&lt;/code&gt; for the infinity symbol isn&amp;#8217;t good enough, you need to use the HTML decimal &lt;code&gt;&amp;amp;#8734;&lt;/code&gt;. However, it seems that using &lt;code&gt;&amp;amp;amp;&lt;/code&gt; for an ampersand is valid. XML is an indiscriminate beast.&lt;/p&gt;

&lt;p&gt;I guess that&amp;#8217;s why &lt;a href='http://daringfireball.net/projects/smartypants/'&gt;SmartyPants&lt;/a&gt; et al. convert characters to HTML decimals rather than entities; the decimal will always work, the entity won&amp;#8217;t.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve updated the &lt;a href='http://stylemanual.org/#html-decimals--shortcuts'&gt;character reference table&lt;/a&gt; on Style Manual accordingly.&lt;/p&gt;</description>
				<pubDate>Sat, 17 Nov 2012 11:05:54 +0100</pubDate>
				<link>http://www.wiaderny.org/notes/html-entities-or-decimals/</link>
				<guid isPermaLink="true">http://www.wiaderny.org/notes/html-entities-or-decimals/</guid>
			</item>
		
			<item>
				<title>Beautiful Web Type&#58; Finding the Gems in Google Web Fonts</title>
				<description>&lt;p&gt;Google Web Fonts is filled with crummy display faces and incomplete families. There are however, some gems; they&amp;#8217;re just really hard to find. Chad Mazzola:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There are over 400 typefaces in the Google web fonts directory. Many of them are awful. But there are also high-quality typefaces that deserve a closer look.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Chad put together this&amp;#8212;beautifully typeset&amp;#8212;site as an example of what can be done with typefaces found on Google Web Fonts. Clicking on any example takes you straight to the page where you can grab the code to use each font.&lt;/p&gt;

&lt;p&gt;I found all the fonts for &lt;a href='http://stylemanual.org/'&gt;Style Manual&lt;/a&gt; using this.&lt;/p&gt;</description>
				<pubDate>Wed, 14 Nov 2012 13:32:36 +0100</pubDate>
				<link>http://www.wiaderny.org/notes/beautiful-web-type/</link>
				<guid isPermaLink="true">http://www.wiaderny.org/notes/beautiful-web-type/</guid>
			</item>
		
			<item>
				<title>Access local WordPress on iPad</title>
				<description>&lt;p&gt;While developing web apps I use MAMP to run a server locally on my iMac. Usually I test my websites only locally and use Safari and Chrome, but this time I was curious about if Internet Explorer would survive accessing my website and how well other devices like iPad and iPhone would handle it. So I would try to access my iMac with other devices which are connected to my local network.&lt;/p&gt;

&lt;p&gt;The critical point here was the WordPress URL. I will describe briefly how to set it up properly, so that it can be viewed on other devices which are connected to the local network.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open up Terminal, enter &lt;code&gt;ipconfig getifaddr en0&lt;/code&gt; and get your IP.&lt;/li&gt;

&lt;li&gt;In MAMPs settings find out your Apache port, which is usually 80 or 8888&lt;/li&gt;

&lt;li&gt;Access your wp-admin, navigate to your general settings and change &lt;code&gt;localhost&lt;/code&gt; to &lt;code&gt;192.168.1.105:8888&lt;/code&gt; if your IP is that arbitrary number I have chosen and 8888 is your Apache port&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You are good to go.&lt;/p&gt;</description>
				<pubDate>Fri, 09 Nov 2012 12:30:00 +0100</pubDate>
				<link>http://www.wiaderny.org/notes/access-local-wordpress-on-ipad/</link>
				<guid isPermaLink="true">http://www.wiaderny.org/notes/access-local-wordpress-on-ipad/</guid>
			</item>
		
			<item>
				<title>UNIX Command Line Usage Notes</title>
				<description>&lt;p&gt;This post is essentially the result of watching Dan Benjamin&amp;#8217;s PeepCode screencast, &lt;a href='https://peepcode.com/products/meet-the-command-line' title='Dan Benjamin'&gt;Meet the Command Line&lt;/a&gt; and taking bucket-loads of notes.&lt;/p&gt;

&lt;p&gt;A few general things to remember about UNIX:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;UNIX is most often case sensitive.&lt;/li&gt;

&lt;li&gt;UNIX will always override a file without warning.&lt;/li&gt;

&lt;li&gt;Help is sometimes &lt;code&gt;help&lt;/code&gt;, &lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt;&lt;/li&gt;

&lt;li&gt;&lt;code&gt;Command&lt;/code&gt; + &lt;code&gt;K&lt;/code&gt; clears the screen.&lt;/li&gt;

&lt;li&gt;&lt;code&gt;sudo&lt;/code&gt; is a command that gives you permissions of a superuser. Allowing you to force something to happen when your user account doesn&amp;#8217;t have permissions.&lt;/li&gt;

&lt;li&gt;You need to wrap file and folder names with spaces in &amp;#8220;quotes&amp;#8221;. I.e. &lt;code&gt;cd &amp;quot;Misc Documents&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='commands'&gt;Commands&lt;/h2&gt;

&lt;h3 id='change_directory'&gt;Change Directory&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cd directoryname&lt;/code&gt; changes the directory to one a level deeper&lt;/li&gt;

&lt;li&gt;Hitting tab whilst typing a directory name will attempt to auto-complete it&lt;/li&gt;

&lt;li&gt;&lt;code&gt;cd ..&lt;/code&gt; takes you up a level.&lt;/li&gt;

&lt;li&gt;&lt;code&gt;cd ../..&lt;/code&gt; will take you back two levels.&lt;/li&gt;

&lt;li&gt;&lt;code&gt;cd ../directoryname&lt;/code&gt; will take you back a level and into a folder called directory name.&lt;/li&gt;

&lt;li&gt;&lt;code&gt;~&lt;/code&gt; represents your home directory. Typing &lt;code&gt;cd ~&lt;/code&gt; anywhere will take you &amp;#8216;home&amp;#8217; (simply typing &lt;code&gt;cd&lt;/code&gt; alone will also take you home). Typing &lt;code&gt;cd /directoryname&lt;/code&gt; will take you to a folder within your home directory. I.e. &lt;code&gt;cd ~/dropbox/notes&lt;/code&gt;&lt;/li&gt;

&lt;li&gt;&lt;code&gt;cd /&lt;/code&gt; takes you to the root of the drive.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='directory_listing'&gt;Directory Listing&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ls&lt;/code&gt; lists everything in the current directory.&lt;/li&gt;

&lt;li&gt;&lt;code&gt;ls -l&lt;/code&gt; gives you a &amp;#8216;long list&amp;#8217;; providing more detail.&lt;/li&gt;

&lt;li&gt;adding &lt;code&gt;-a&lt;/code&gt; shows hidden files.&lt;/li&gt;

&lt;li&gt;&lt;code&gt;-h&lt;/code&gt; is an abbreviation for &amp;#8216;human readable&amp;#8217;. As file sizes are listed in bytes, this will show them in B, K, M, G.&lt;/li&gt;

&lt;li&gt;these can be strung together. I.e. &lt;code&gt;ls -lha&lt;/code&gt;. But there isn&amp;#8217;t any point in doing &lt;code&gt;ls -h&lt;/code&gt;, as it needs the long list to make the long list human readable.&lt;/li&gt;

&lt;li&gt;you can list the contents of the parent directory with &lt;code&gt;ls ..&lt;/code&gt; as &lt;code&gt;..&lt;/code&gt; represents the parent directory. Just as &lt;code&gt;cd ..&lt;/code&gt; takes you to the parent directory.&lt;/li&gt;

&lt;li&gt;&lt;code&gt;ls -R&lt;/code&gt; will show you all files and folders in every level below. But it looks like shit. With &amp;#8216;Tree&amp;#8217; installed you can type &lt;code&gt;tree&lt;/code&gt; to see the structure in a more graphical way. See &lt;em&gt;Tree&lt;/em&gt;, under &lt;em&gt;Programs&lt;/em&gt; for more detail.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='showing_the_current_path'&gt;Showing the Current Path&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;pwd&lt;/code&gt; shows the current path. It&amp;#8217;ll output something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/Users/andytlr/dropbox/websites&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id='copying_moving_and_renaming_files'&gt;Copying, Moving and Renaming Files&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cp&lt;/code&gt; is the command for copying.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;code&gt;cp -R -v samples my-samples&lt;/code&gt; is a copy command. &lt;code&gt;cp&lt;/code&gt; is short for copy, it&amp;#8217;s telling it to make a copy of a folder called &lt;code&gt;samples&lt;/code&gt; and call it &lt;code&gt;my-samples&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I think &lt;code&gt;-R&lt;/code&gt; means &lt;em&gt;recursively&lt;/em&gt;, which I think means to make the changes to all child files and folders.&lt;/li&gt;

&lt;li&gt;I think &lt;code&gt;-v&lt;/code&gt; means &lt;em&gt;verbose&lt;/em&gt;. But I don&amp;#8217;t know what that means.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;code&gt;cp filename.txt newfile.txt&lt;/code&gt; will copy a single file.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;code&gt;cp filename.txt folder&lt;/code&gt; will copy the file to a directory called &lt;code&gt;folder&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;code&gt;mv&lt;/code&gt; is the command for moving.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Moving a file to another file is essentially renaming. I.e. &lt;code&gt;mv file.txt newname.md&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;code&gt;mv newname.md folder&lt;/code&gt; will move &lt;code&gt;newname.md&lt;/code&gt; to a directory called &lt;code&gt;folder&lt;/code&gt;. Just like copying.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;code&gt;mv newname.md ~&lt;/code&gt; will move &lt;code&gt;newname.md&lt;/code&gt; to your home directory. You could also use &lt;code&gt;/path&lt;/code&gt; in place of &lt;code&gt;~&lt;/code&gt; to specify an absolute path.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='showing_the_contents_of_a_file'&gt;Showing the Contents of a File&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cat filename.txt&lt;/code&gt; will show the contents of filename.txt&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='saving_and_appending_output_to_a_file'&gt;Saving and Appending Output to a File&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tree &amp;gt; tree.txt&lt;/code&gt; will make a file called tree.txt with the directory structure.&lt;/li&gt;

&lt;li&gt;&lt;code&gt;cat file.txt &amp;gt; newfile.txt&lt;/code&gt; will take the contents of file.txt and make a new file called newfile.txt with that contents. However, if that file already exists, its contents will be overridden.&lt;/li&gt;

&lt;li&gt;Using &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; will append the contents instead of overwriting it. &lt;code&gt;cat currentfile.txt &amp;gt;&amp;gt; newfile.txt&lt;/code&gt; will put the contents of currentfile.txt at the end of newfile.txt, if newfile.txt doesn&amp;#8217;t exist, it will be created. So unless you specifically want to overwrite a file, it&amp;#8217;s probably saver to use &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='removing_a_file_or_directory'&gt;Removing a File or Directory&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rm filename.txt&lt;/code&gt;&lt;/li&gt;

&lt;li&gt;&lt;code&gt;rm filename1.txt filename2.txt&lt;/code&gt; to remove more than one file.&lt;/li&gt;

&lt;li&gt;&lt;code&gt;rm -i filename.txt&lt;/code&gt; removes with confirmation.&lt;/li&gt;

&lt;li&gt;&lt;code&gt;rmdir directoryname&lt;/code&gt; is the command to remove a directory. This only works on empty directories.&lt;/li&gt;

&lt;li&gt;&lt;code&gt;rm -R directoryname&lt;/code&gt; removes a directory and contents.&lt;/li&gt;

&lt;li&gt;&lt;code&gt;mr -f filename.txt&lt;/code&gt; force removes a file without a confirmation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='make_a_directory'&gt;Make a Directory&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mkdir directoryname&lt;/code&gt;&lt;/li&gt;

&lt;li&gt;To make a directory structure you can use &lt;code&gt;-p&lt;/code&gt;. I.e. &lt;code&gt;mkdir -p dir1/dir2/dir3/dir4/dir5&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='make_a_file'&gt;Make a File&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You can create a new text file with &lt;code&gt;cat&lt;/code&gt;. &lt;code&gt;cat &amp;gt; newfilename.md&lt;/code&gt; will give you a new line in Terminal. Type some contents for the file &lt;code&gt;newfilename.md&lt;/code&gt;. To save and exit, start a new line and type &lt;code&gt;Control&lt;/code&gt; + &lt;code&gt;D&lt;/code&gt;.&lt;/li&gt;

&lt;li&gt;It&amp;#8217;s probably easier to just use a text editor. For example &lt;code&gt;nano&lt;/code&gt; gives you a fresh document and you can save from within Nano. &lt;code&gt;nano newfilename.md&lt;/code&gt; will create a file called &lt;code&gt;newfilename.md&lt;/code&gt; and open it in Nano.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='pipes'&gt;Pipes&lt;/h3&gt;

&lt;p&gt;Pipes let you chain commands together. They&amp;#8217;re represented by &lt;code&gt;|&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If the output of one command could be the input to the next you could use a pipe like &lt;code&gt;command1 | command2&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id='programs'&gt;Programs&lt;/h2&gt;

&lt;h3 id='ssh'&gt;SSH&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;To connect to a remote server use &lt;code&gt;ssh username@server&lt;/code&gt;&lt;/li&gt;

&lt;li&gt;&lt;code&gt;uname -a&lt;/code&gt; will show you details of the server.&lt;/li&gt;

&lt;li&gt;Type &lt;code&gt;exit&lt;/code&gt; to disconnect.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='sftp'&gt;SFTP&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;To transfer files to a remote server use &lt;code&gt;sftp username@server&lt;/code&gt;&lt;sup id='fnref:1'&gt;&lt;a href='#fn:1' rel='footnote'&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;

&lt;li&gt;&lt;code&gt;put filename&lt;/code&gt; is the command to transfer a file to the server.&lt;/li&gt;

&lt;li&gt;&lt;code&gt;get filename&lt;/code&gt; is the command to transfer a file from the server.&lt;/li&gt;

&lt;li&gt;Type &lt;code&gt;exit&lt;/code&gt; to disconnect.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='tree'&gt;Tree&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Install Tree via Homebrew with &lt;code&gt;brew install tree&lt;/code&gt;.&lt;/li&gt;

&lt;li&gt;Once installed, typing &lt;code&gt;tree&lt;/code&gt; will give you a listing of all the files in the current directory, but also show you all the children in a more graphical way than &lt;code&gt;ls -R&lt;/code&gt;.&lt;/li&gt;

&lt;li&gt;As with &lt;code&gt;ls&lt;/code&gt; you can type &lt;code&gt;tree ..&lt;/code&gt; or &lt;code&gt;tree directoryname&lt;/code&gt; to see up or down in the structure.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A typical output might look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.
├── folder1
│   └── folder2
│       └── folder3
│           └── folder4
└── test1
    ├── test2
    │   ├── test2.md
    │   └── test3
    │       ├── test.md
    │       ├── test3.md
    │       └── test4
    └── test2.md&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But if the structure is deep, like in &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;~&lt;/code&gt;, it quickly gets out of hand.&lt;/p&gt;

&lt;h3 id='more'&gt;More&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use more with a pipe to show the contents of a file standalone by typing &lt;code&gt;cat filename.txt | more&lt;/code&gt;. More will do this for any command that outputs content. This is only useful for big files, as without it, the whole file will be shown and you&amp;#8217;ll be looking at the bottom of the content, not the top.&lt;/li&gt;

&lt;li&gt;You can use a &lt;code&gt;&amp;lt;&lt;/code&gt; to tell something to take the contents of the following. For example &lt;code&gt;more &amp;lt; filename.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='nano_text_editor'&gt;Nano Text Editor&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;nano filename.txt&lt;/code&gt;&lt;/p&gt;

&lt;h3 id='word_count'&gt;Word Count&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;cat filename.txt | wc&lt;/code&gt; will show you a word count of the file.&lt;/p&gt;

&lt;h3 id='grep'&gt;Grep&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;cat filename.txt | grep keyword&lt;/code&gt; will output only the lines in a file that contain &amp;#8216;keyword&amp;#8217;. This appears to be case sensitive.&lt;/p&gt;

&lt;h3 id='gzip_and_tar'&gt;Gzip and TAR&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gzip filename.txt&lt;/code&gt; will compress a file. It will also remove the original file, unlike in the OS X GUI.&lt;/li&gt;

&lt;li&gt;&lt;code&gt;gzip -d filename.txt.gz&lt;/code&gt; will de-compress the g-zipped file. It will remove the g-zipped file and just retain the uncompressed file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Gzip will only compress one file, not a folder. For that you need TAR (short for Tape Archive).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To &amp;#8216;make and archive&amp;#8217; of a directory use &lt;code&gt;tar -cvf filename.tar directoryname&lt;/code&gt;. The &lt;code&gt;c&lt;/code&gt; means create, the &lt;code&gt;v&lt;/code&gt; means verbose and &lt;code&gt;f&lt;/code&gt; means you want to specify a file name.&lt;/li&gt;

&lt;li&gt;By default&amp;#8212;unlike Gzip&amp;#8212;TAR will leave the original directory.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A TAR file is an archive, but it is &lt;em&gt;not&lt;/em&gt; compressed.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gzip filename.tar&lt;/code&gt; to get &lt;code&gt;filename.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Using the previous TAR command with the &lt;code&gt;-z&lt;/code&gt; flag, you can Gzip it at the same time.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tar -czvf filename.tgz directoryname&lt;/code&gt; (.tgz is short for .tar.gz)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To &lt;strong&gt;expand&lt;/strong&gt; a TAR file, you need to do it from a new folder. Otherwise it&amp;#8217;ll dump the contents in the current folder. (It seems like if you compressed a folder, though, that it will expand that folder, rather than it&amp;#8217;s contents. So unless there&amp;#8217;s a folder with the same name in the current directory, you&amp;#8217;re alright.)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tar -xzvf ~/filename.tgz&lt;/code&gt; will expand the archive &lt;code&gt;filename.tgz&lt;/code&gt; from the parent folder into the current folder.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class='footnotes'&gt;&lt;hr /&gt;&lt;ol&gt;&lt;li id='fn:1'&gt;
&lt;p&gt;It seemed more complicated, but in the last 5min of &lt;a href='https://peepcode.com/products/meet-the-command-line' title='Dan Benjamin'&gt;Dan&amp;#8217;s video&lt;/a&gt;, there was a section on Secure Copy (SCP), which is an alternative to SFTP.&lt;/p&gt;
&lt;a href='#fnref:1' rev='footnote'&gt;&amp;#8617;&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</description>
				<pubDate>Sat, 03 Nov 2012 12:10:00 +0100</pubDate>
				<link>http://www.wiaderny.org/notes/unix-command-line-usage-notes/</link>
				<guid isPermaLink="true">http://www.wiaderny.org/notes/unix-command-line-usage-notes/</guid>
			</item>
		
			<item>
				<title>Installing Ruby &amp; Jekyll on Mac OS X</title>
				<description>&lt;p&gt;Because of my ignorance for Terminal, I struggled to install Ruby and &lt;a href='https://github.com/mojombo/jekyll' title='Jekyll on GitHub'&gt;Jekyll&lt;/a&gt;, so I&amp;#8217;ve written some notes on that process. When I have to do it from scratch again, I&amp;#8217;ll attempt to make them clearer.&lt;/p&gt;

&lt;p&gt;I installed so much shit trying to get Jekyll installed, that I don&amp;#8217;t really know what I did. But there was a couple of gotchas. So if I need to do it again, the rough process was what I&amp;#8217;ve listed below. Along the way, &lt;a href='https://gist.github.com/1587643' title='Gist explaining installing Ruby on OS X Lion'&gt;this&lt;/a&gt; seemed to be the most straightforward guide I read.&lt;/p&gt;

&lt;h2 id='install_ruby_and_dependencies'&gt;Install Ruby and Dependencies&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Download and install &lt;strong&gt;Xcode&lt;/strong&gt; from the Mac App Store. Xcode apparently &lt;em&gt;used&lt;/em&gt; to come with &lt;strong&gt;Command Line Tools&lt;/strong&gt;, but now you have to install them as an extra. Within Xcode, go to &lt;em&gt;Preferences &amp;gt; Downloads&lt;/em&gt;, and install them. I installed Xcode figuring it came with these&amp;#8212;I&amp;#8217;m guessing I would have had Ruby installed earlier if I knew about this.&lt;/li&gt;

&lt;li&gt;Install &lt;strong&gt;Homebrew&lt;/strong&gt;, a package manager. &lt;code&gt;ruby -e &amp;quot;$(curl -fsSkL raw.github.com/mxcl/homebrew/go)&amp;quot;&lt;/code&gt; It lets you install stuff easily.&lt;/li&gt;

&lt;li&gt;Install &lt;strong&gt;RVM: Ruby Version Manager&lt;/strong&gt;. This lets you switch versions of Ruby without affecting the system version. &lt;code&gt;curl -L https://get.rvm.io | bash -s stable --ruby&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='install_and_run_jekyll'&gt;Install and Run Jekyll&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The Jekyll Wiki is the best source of instructions for installation, but also templating and usage etc. Starting with &lt;a href='https://github.com/mojombo/jekyll/wiki/Install' title='Jekyll Installation'&gt;Installation&lt;/a&gt; and moving on to &lt;a href='https://github.com/mojombo/jekyll/wiki/Usage' title='Jekyll Usage'&gt;Usage&lt;/a&gt;.&lt;/li&gt;

&lt;li&gt;Use &lt;code&gt;gem install jekyll&lt;/code&gt; to install Jekyll. If you&amp;#8217;ve got Ruby installed properly this should work.&lt;/li&gt;

&lt;li&gt;Once installed, you can run &lt;code&gt;jekyll --server&lt;/code&gt; on a folder that is setup with Jekyll template files. If your &lt;code&gt;_config.yml&lt;/code&gt; file doesn&amp;#8217;t have server set to auto, you can additionally add it to this command: &lt;code&gt;jekyll --server --auto&lt;/code&gt;.&lt;/li&gt;

&lt;li&gt;Hit up &lt;a href='http://localhost:4000'&gt;http://localhost:4000&lt;/a&gt; and you should have a working site.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='command_line_alias'&gt;Command Line Alias&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;jekyll --server --auto&lt;/code&gt; is a long command to type each time. To make this shorter, open the file &lt;code&gt;.bash_profile&lt;/code&gt; in your home directory and add an alias. Adding the line &lt;code&gt;alias jsa=&amp;#39;jekyll --server --auto&amp;#39;;&lt;/code&gt; means each time you want to run Jekyll you can simply type &lt;code&gt;jsa&lt;/code&gt;.&lt;/p&gt;</description>
				<pubDate>Sat, 03 Nov 2012 12:00:00 +0100</pubDate>
				<link>http://www.wiaderny.org/notes/installing-ruby-and-jekyll/</link>
				<guid isPermaLink="true">http://www.wiaderny.org/notes/installing-ruby-and-jekyll/</guid>
			</item>
		
			<item>
				<title>Economic Diagrams with TikZ</title>
				<description>&lt;p&gt;LaTeX - or more precisely speaking &lt;a href='http://www.ctan.org/pkg/pgf'&gt;TikZ&lt;/a&gt; - lets you create really great diagrams for your economic papers. The main difference compared to carelessly embedding images in your document is that you will be creating vector images with TiKz, which are lossless scaleable, what means they won&amp;#8217;t blur - you won&amp;#8217;t see pixels when you scale them up. Another great point which makes me be in favor of vector graphics by TikZ is that they are more accurate compared to their now randomly appearing pixel brothers. &lt;/p&gt;&lt;h3 id='thefinalproduct'&gt;The final product&lt;/h3&gt;
&lt;p&gt;Lately I was creating the diagram which I attached below. In this task I was focused primarily on some fine details, i.e. the arrowheads, the crosshatching, and the line thickness ratio.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Economic diagram in LaTeX created with TikZ' src='http://f.cl.ly/items/3m2h0i3U2u1s243O3D1J/din-norm.jpg' /&gt;&lt;/p&gt;
&lt;p&gt;Even if this diagram is just of qualitative and not of quantitative nature, it is any the less important for me to have correctly set arrowheads. I must admit at this point, that I consider diagrams which do not feature this detail, as of lacking accuracy. Well set heads, by contrast, demonstrate understanding of the Cartesian coordinate system, for they, being set at the end of each coordinate axis indicate the growth direction of the coordinate itself. A coordinate without correct arrowheads can therefore - in a very consequent way - be considered meaningless and vague.&lt;/p&gt;&lt;h3 id='customarrowheads'&gt;Custom arrowheads&lt;/h3&gt;&lt;p&gt;In the first place it was necessary to customize the arrowheads which would be loaded using the default TikZ Library &lt;code&gt;arrows&lt;/code&gt;. Beneath I have attached the necessary code to produce finer arrowheads.&lt;/p&gt;&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='tex'&gt;&lt;span class='c'&gt;%-------------------------------------------------------------&lt;/span&gt;
&lt;span class='c'&gt;%       Call arrow library and declare arrowheads&lt;/span&gt;
&lt;span class='c'&gt;%-------------------------------------------------------------&lt;/span&gt;

&lt;span class='k'&gt;\usetikzlibrary&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;arrows&lt;span class='nb'&gt;}&lt;/span&gt;

&lt;span class='k'&gt;\makeatletter&lt;/span&gt;
&lt;span class='k'&gt;\pgfarrowsdeclare&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;dinarr&lt;span class='nb'&gt;}{&lt;/span&gt;dinarr&lt;span class='nb'&gt;}&lt;/span&gt;
   &lt;span class='nb'&gt;{&lt;/span&gt;
&lt;span class='k'&gt;\pgfutil&lt;/span&gt;@tempdima=0.5pt&lt;span class='c'&gt;%&lt;/span&gt;
&lt;span class='k'&gt;\advance\pgfutil&lt;/span&gt;@tempdima by.25&lt;span class='k'&gt;\pgflinewidth&lt;/span&gt;&lt;span class='c'&gt;%&lt;/span&gt;
&lt;span class='k'&gt;\pgfutil&lt;/span&gt;@tempdimb=7.29&lt;span class='k'&gt;\pgfutil&lt;/span&gt;@tempdima&lt;span class='k'&gt;\advance\pgfutil&lt;/span&gt;@tempdimb by.5&lt;span class='k'&gt;\pgflinewidth&lt;/span&gt;&lt;span class='c'&gt;%&lt;/span&gt;
&lt;span class='k'&gt;\pgfarrowsleftextend&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;+-&lt;span class='k'&gt;\pgfutil&lt;/span&gt;@tempdimb&lt;span class='nb'&gt;}&lt;/span&gt;
&lt;span class='k'&gt;\pgfutil&lt;/span&gt;@tempdimb=.5&lt;span class='k'&gt;\pgfutil&lt;/span&gt;@tempdima&lt;span class='k'&gt;\advance\pgfutil&lt;/span&gt;@tempdimb by1.6&lt;span class='k'&gt;\pgflinewidth&lt;/span&gt;&lt;span class='c'&gt;%&lt;/span&gt;
&lt;span class='k'&gt;\pgfarrowsrightextend&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;+&lt;span class='k'&gt;\pgfutil&lt;/span&gt;@tempdimb&lt;span class='nb'&gt;}&lt;/span&gt;
   &lt;span class='nb'&gt;}&lt;/span&gt;
   &lt;span class='nb'&gt;{&lt;/span&gt;
&lt;span class='k'&gt;\pgfutil&lt;/span&gt;@tempdima=0.5pt&lt;span class='c'&gt;%&lt;/span&gt;
&lt;span class='k'&gt;\advance\pgfutil&lt;/span&gt;@tempdima by.25&lt;span class='k'&gt;\pgflinewidth&lt;/span&gt;&lt;span class='c'&gt;%&lt;/span&gt;
&lt;span class='k'&gt;\pgfsetdash&lt;/span&gt;&lt;span class='nb'&gt;{}{&lt;/span&gt;+0pt&lt;span class='nb'&gt;}&lt;/span&gt;
&lt;span class='k'&gt;\pgfsetmiterjoin&lt;/span&gt;
&lt;span class='k'&gt;\pgfpathmoveto&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;&lt;span class='k'&gt;\pgfpointadd&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;&lt;span class='k'&gt;\pgfqpoint&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;0.5&lt;span class='k'&gt;\pgfutil&lt;/span&gt;@tempdima&lt;span class='nb'&gt;}{&lt;/span&gt;0pt&lt;span class='nb'&gt;}}&lt;/span&gt;&lt;span class='c'&gt;%&lt;/span&gt;
&lt;span class='nb'&gt;{&lt;/span&gt;&lt;span class='k'&gt;\pgfqpoint&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;-3mm&lt;span class='nb'&gt;}{&lt;/span&gt;0.5mm&lt;span class='nb'&gt;}}}&lt;/span&gt;
&lt;span class='k'&gt;\pgfpathlineto&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;&lt;span class='k'&gt;\pgfqpoint&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;0.5&lt;span class='k'&gt;\pgfutil&lt;/span&gt;@tempdima&lt;span class='nb'&gt;}{&lt;/span&gt;0&lt;span class='k'&gt;\pgfutil&lt;/span&gt;@tempdima&lt;span class='nb'&gt;}}&lt;/span&gt;
&lt;span class='k'&gt;\pgfpathlineto&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;&lt;span class='k'&gt;\pgfpointadd&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;&lt;span class='k'&gt;\pgfqpoint&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;0.5&lt;span class='k'&gt;\pgfutil&lt;/span&gt;@tempdima&lt;span class='nb'&gt;}{&lt;/span&gt;0pt&lt;span class='nb'&gt;}}&lt;/span&gt;&lt;span class='c'&gt;%&lt;/span&gt;
&lt;span class='nb'&gt;{&lt;/span&gt;&lt;span class='k'&gt;\pgfqpoint&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;-3mm&lt;span class='nb'&gt;}{&lt;/span&gt;-0.5mm&lt;span class='nb'&gt;}}}&lt;/span&gt;
&lt;span class='k'&gt;\pgfpathclose&lt;/span&gt;
&lt;span class='k'&gt;\pgfusepathqfillstroke&lt;/span&gt;
   &lt;span class='nb'&gt;}&lt;/span&gt;
&lt;span class='k'&gt;\pgfarrowsdeclarereversed&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;dinarr reversed&lt;span class='nb'&gt;}{&lt;/span&gt;dinarr reversed&lt;span class='nb'&gt;}{&lt;/span&gt;dinarr&lt;span class='nb'&gt;}{&lt;/span&gt;dinarr&lt;span class='nb'&gt;}&lt;/span&gt;
&lt;span class='k'&gt;\makeatother&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;These arrowheads can be of course altered to specific needs, but this code snippet will produce - if properly inserted - arrowheads which have .5mm in height and 3mm in length. You can alter their appearance by changing the values in &lt;code&gt;\pgfqpoint{-3mm}{0.5mm}&lt;/code&gt; and its counterpart two lines below. If you are happy with the appearance you can use them as usual with a command like &lt;code&gt;\draw[-dinarr]&lt;/code&gt;.&lt;/p&gt;&lt;h3 id='customhatching'&gt;Custom hatching&lt;/h3&gt;&lt;p&gt;Creating a neat hatching was the next task which I was up to. I wanted the hatching to be vertically aligned and 1mm apart. The code was again customized after the &lt;code&gt;pattern&lt;/code&gt; library was called.&lt;/p&gt;&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='tex'&gt;&lt;span class='c'&gt;%-------------------------------------------------------------&lt;/span&gt;
&lt;span class='c'&gt;%       Call some libraries and declare vertical hatchings      &lt;/span&gt;
&lt;span class='c'&gt;%-------------------------------------------------------------&lt;/span&gt;
&lt;span class='k'&gt;\usetikzlibrary&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;patterns,calc,intersections&lt;span class='nb'&gt;}&lt;/span&gt;

&lt;span class='k'&gt;\pgfdeclarepatternformonly&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;dinhatch&lt;span class='nb'&gt;}{&lt;/span&gt;&lt;span class='k'&gt;\pgfpointorigin&lt;/span&gt;&lt;span class='nb'&gt;}{&lt;/span&gt;&lt;span class='k'&gt;\pgfqpoint&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;1mm&lt;span class='nb'&gt;}&lt;/span&gt;&lt;span class='c'&gt;%&lt;/span&gt;
&lt;span class='nb'&gt;{&lt;/span&gt;100pt&lt;span class='nb'&gt;}}{&lt;/span&gt;&lt;span class='k'&gt;\pgfqpoint&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;1mm&lt;span class='nb'&gt;}{&lt;/span&gt;100pt&lt;span class='nb'&gt;}}&lt;/span&gt;
&lt;span class='nb'&gt;{&lt;/span&gt;
  &lt;span class='k'&gt;\pgfsetlinewidth&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;0.4pt&lt;span class='nb'&gt;}&lt;/span&gt;
  &lt;span class='k'&gt;\pgfpathmoveto&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;&lt;span class='k'&gt;\pgfqpoint&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;0.5pt&lt;span class='nb'&gt;}{&lt;/span&gt;0pt&lt;span class='nb'&gt;}}&lt;/span&gt;
  &lt;span class='k'&gt;\pgfpathlineto&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;&lt;span class='k'&gt;\pgfqpoint&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;0.5pt&lt;span class='nb'&gt;}{&lt;/span&gt;100pt&lt;span class='nb'&gt;}}&lt;/span&gt;
  &lt;span class='k'&gt;\pgfusepath&lt;/span&gt;&lt;span class='nb'&gt;{&lt;/span&gt;stroke&lt;span class='nb'&gt;}&lt;/span&gt;
&lt;span class='nb'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id='whatsnext'&gt;What&amp;#8217;s next?&lt;/h3&gt;&lt;p&gt;Having this done, I was ready to finally draw some lines with LaTeX and TikZ. Well, not really. There were still some styles to define, i.e. intercept points, labels, etc. I will continue this note, when I have some more spare time and possibly upload the &lt;code&gt;.tex&lt;/code&gt; file as well.&lt;/p&gt;</description>
				<pubDate>Sat, 13 Oct 2012 00:00:00 +0200</pubDate>
				<link>http://www.wiaderny.org/notes/economic-diagrams-with-tikz/</link>
				<guid isPermaLink="true">http://www.wiaderny.org/notes/economic-diagrams-with-tikz/</guid>
			</item>
		
	</channel>
</rss>